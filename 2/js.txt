

(function (a) {
    a.fn.extend({
        autocomplete: function (b, c) {
            var d = typeof b == "string";
            c = a.extend({}, a.Autocompleter.defaults, {
                url: d ? b : null,
                data: d ? null : b,
                delay: d ? a.Autocompleter.defaults.delay : 10,
                max: c && !c.scroll ? 10 : 150
            }, c);
            c.highlight = c.highlight ||
            function (e) {
                return e
            };
            c.formatMatch = c.formatMatch || c.formatItem;
            return this.each(function () {
                new a.Autocompleter(this, c)
            })
        },
        result: function (b) {
            return this.bind("result", b)
        },
        search: function (b) {
            return this.trigger("search", [b])
        },
        flushCache: function () {
            return this.trigger("flushCache")
        },
        setOptions: function (b) {
            return this.trigger("setOptions", [b])
        },
        unautocomplete: function () {
            return this.trigger("unautocomplete")
        }
    });
    a.Autocompleter = function (l, g) {
        var c = {
            UP: 38,
            DOWN: 40,
            DEL: 46,
            TAB: 9,
            RETURN: 13,
            ESC: 27,
            COMMA: 188,
            PAGEUP: 33,
            PAGEDOWN: 34,
            BACKSPACE: 8
        };
        var b = a(l).attr("autocomplete", "off").addClass(g.inputClass);
        var j;
        var p = "";
        var m = a.Autocompleter.Cache(g);
        var e = 0;
        var u;
        var x = {
            mouseDownOnSelect: false
        };
        var r = a.Autocompleter.Select(g, l, d, x);
        var w;
        a.browser.opera && a(l.form).bind("submit.autocomplete", function () {
            if (w) {
                w = false;
                return false
            }
        });
        b.bind((a.browser.opera ? "keypress" : "keydown") + ".autocomplete", function (y) {
            e = 1;
            u = y.keyCode;
            switch (y.keyCode) {
            case c.UP:
                y.preventDefault();
                if (r.visible()) {
                    r.prev()
                } else {
                    t(0, true)
                }
                break;
            case c.DOWN:
                y.preventDefault();
                if (r.visible()) {
                    r.next()
                } else {
                    t(0, true)
                }
                break;
            case c.PAGEUP:
                y.preventDefault();
                if (r.visible()) {
                    r.pageUp()
                } else {
                    t(0, true)
                }
                break;
            case c.PAGEDOWN:
                y.preventDefault();
                if (r.visible()) {
                    r.pageDown()
                } else {
                    t(0, true)
                }
                break;
            case g.multiple && a.trim(g.multipleSeparator) == "," && c.COMMA:
            case c.TAB:
            case c.RETURN:
                if (d()) {
                    y.preventDefault();
                    w = true;
                    return false
                }
                break;
            case c.ESC:
                r.hide();
                break;
            default:
                clearTimeout(j);
                j = setTimeout(t, g.delay);
                break
            }
        }).focus(function () {
            e++
        }).blur(function () {
            e = 0;
            if (!x.mouseDownOnSelect) {
                s()
            }
        }).click(function () {
            if (e++ > 1 && !r.visible()) {
                t(0, true)
            }
        }).bind("search", function () {
            var y = (arguments.length > 1) ? arguments[1] : null;

            function z(D, C) {
                var A;
                if (C && C.length) {
                    for (var B = 0; B < C.length; B++) {
                        if (C[B].result.toLowerCase() == D.toLowerCase()) {
                            A = C[B];
                            break
                        }
                    }
                }
                if (typeof y == "function") {
                    y(A)
                } else {
                    b.trigger("result", A && [A.data, A.value])
                }
            }
            a.each(h(b.val()), function (A, B) {
                f(B, z, z)
            })
        }).bind("flushCache", function () {
            m.flush()
        }).bind("setOptions", function () {
            a.extend(g, arguments[1]);
            if ("data" in arguments[1]) {
                m.populate()
            }
        }).bind("unautocomplete", function () {
            r.unbind();
            b.unbind();
            a(l.form).unbind(".autocomplete")
        });

        function d() {
            var B = r.selected();
            if (!B) {
                return false
            }
            var y = B.result;
            p = y;
            if (g.multiple) {
                var E = h(b.val());
                if (E.length > 1) {
                    var A = g.multipleSeparator.length;
                    var D = a(l).selection().start;
                    var C, z = 0;
                    a.each(E, function (F, G) {
                        z += G.length;
                        if (D <= z) {
                            C = F;
                            return false
                        }
                        z += A
                    });
                    E[C] = y;
                    y = E.join(g.multipleSeparator)
                }
                y += g.multipleSeparator
            }
            b.val(y);
            v();
            b.trigger("result", [B.data, B.value]);
            return true
        }
        function t(A, z) {
            if (u == c.DEL) {
                r.hide();
                return
            }
            var y = b.val();
            if (!z && y == p) {
                return
            }
            p = y;
            y = i(y);
            if (y.length >= g.minChars) {
                b.addClass(g.loadingClass);
                if (!g.matchCase) {
                    y = y.toLowerCase()
                }
                f(y, k, v)
            } else {
                n();
                r.hide()
            }
        }
        function h(y) {
            if (!y) {
                return [""]
            }
            if (!g.multiple) {
                return [a.trim(y)]
            }
            return a.map(y.split(g.multipleSeparator), function (z) {
                return a.trim(y).length ? a.trim(z) : null
            })
        }
        function i(y) {
            if (!g.multiple) {
                return y
            }
            var A = h(y);
            if (A.length == 1) {
                return A[0]
            }
            var z = a(l).selection().start;
            if (z == y.length) {
                A = h(y)
            } else {
                A = h(y.replace(y.substring(z), ""))
            }
            return A[A.length - 1]
        }
        function q(y, z) {
            if (g.autoFill && (i(b.val()).toLowerCase() == y.toLowerCase()) && u != c.BACKSPACE) {
                b.val(b.val() + z.substring(i(p).length));
                a(l).selection(p.length, p.length + z.length)
            }
        }
        function s() {
            clearTimeout(j);
            j = setTimeout(v, 200)
        }
        function v() {
            var y = r.visible();
            r.hide();
            clearTimeout(j);
            n();
            if (g.mustMatch) {
                b.search(function (z) {
                    if (!z) {
                        if (g.multiple) {
                            var A = h(b.val()).slice(0, -1);
                            b.val(A.join(g.multipleSeparator) + (A.length ? g.multipleSeparator : ""))
                        } else {
                            b.val("");
                            b.trigger("result", null)
                        }
                    }
                })
            }
        }
        function k(z, y) {
            if (y && y.length && e) {
                n();
                r.display(y, z);
                q(z, y[0].value);
                r.show()
            } else {
                v()
            }
        }
        function f(z, B, y) {
            if (!g.matchCase) {
                z = z.toLowerCase()
            }
            var A = m.load(z);
            if (A && A.length) {
                B(z, A)
            } else {
                if ((typeof g.url == "string") && (g.url.length > 0)) {
                    var C = {
                        timestamp: +new Date()
                    };
                    a.each(g.extraParams, function (D, E) {
                        C[D] = typeof E == "function" ? E() : E
                    });
                    a.ajax({
                        mode: "abort",
                        port: "autocomplete" + l.name,
                        dataType: g.dataType,
                        url: g.url,
                        data: a.extend({
                            q: i(z),
                            limit: g.max
                        }, C),
                        success: function (E) {
                            var D = g.parse && g.parse(E) || o(E);
                            m.add(z, D);
                            B(z, D)
                        }
                    })
                } else {
                    r.emptyList();
                    y(z)
                }
            }
        }
        function o(B) {
            var y = [];
            var A = B.split("\n");
            for (var z = 0; z < A.length; z++) {
                var C = a.trim(A[z]);
                if (C) {
                    C = C.split("|");
                    y[y.length] = {
                        data: C,
                        value: C[0],
                        result: g.formatResult && g.formatResult(C, C[0]) || C[0]
                    }
                }
            }
            return y
        }
        function n() {
            b.removeClass(g.loadingClass)
        }
    };
    a.Autocompleter.defaults = {
        inputClass: "ac_input",
        resultsClass: "ac_results",
        loadingClass: "ac_loading",
        minChars: 1,
        delay: 400,
        matchCase: false,
        matchSubset: true,
        matchContains: false,
        cacheLength: 10,
        max: 100,
        mustMatch: false,
        extraParams: {},
        selectFirst: true,
        formatItem: function (b) {
            return b[0]
        },
        formatMatch: null,
        autoFill: false,
        width: 0,
        multiple: false,
        multipleSeparator: ", ",
        highlight: function (c, b) {
            return c.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + b.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>")
        },
        scroll: true,
        scrollHeight: 180
    };
    a.Autocompleter.Cache = function (c) {
        var f = {};
        var d = 0;

        function h(l, k) {
            if (!c.matchCase) {
                l = l.toLowerCase()
            }
            var j = l.indexOf(k);
            if (c.matchContains == "word") {
                j = l.toLowerCase().search("\\b" + k.toLowerCase())
            }
            if (j == -1) {
                return false
            }
            return j == 0 || c.matchContains
        }
        function g(j, i) {
            if (d > c.cacheLength) {
                b()
            }
            if (!f[j]) {
                d++
            }
            f[j] = i
        }
        function e() {
            if (!c.data) {
                return false
            }
            var k = {},
                j = 0;
            if (!c.url) {
                c.cacheLength = 1
            }
            k[""] = [];
            for (var m = 0, l = c.data.length; m < l; m++) {
                var p = c.data[m];
                p = (typeof p == "string") ? [p] : p;
                var o = c.formatMatch(p, m + 1, c.data.length);
                if (o === false) {
                    continue
                }
                var n = o.charAt(0).toLowerCase();
                if (!k[n]) {
                    k[n] = []
                }
                var q = {
                    value: o,
                    data: p,
                    result: c.formatResult && c.formatResult(p) || o
                };
                k[n].push(q);
                if (j++ < c.max) {
                    k[""].push(q)
                }
            }
            a.each(k, function (r, s) {
                c.cacheLength++;
                g(r, s)
            })
        }
        setTimeout(e, 25);

        function b() {
            f = {};
            d = 0
        }
        return {
            flush: b,
            add: g,
            populate: e,
            load: function (n) {
                if (!c.cacheLength || !d) {
                    return null
                }
                if (!c.url && c.matchContains) {
                    var m = [];
                    for (var j in f) {
                        if (j.length > 0) {
                            var o = f[j];
                            a.each(o, function (p, k) {
                                if (h(k.value, n)) {
                                    m.push(k)
                                }
                            })
                        }
                    }
                    return m
                } else {
                    if (f[n]) {
                        return f[n]
                    } else {
                        if (c.matchSubset) {
                            for (var l = n.length - 1; l >= c.minChars; l--) {
                                var o = f[n.substr(0, l)];
                                if (o) {
                                    var m = [];
                                    a.each(o, function (p, k) {
                                        if (h(k.value, n)) {
                                            m[m.length] = k
                                        }
                                    });
                                    return m
                                }
                            }
                        }
                    }
                }
                return null
            }
        }
    };
    a.Autocompleter.Select = function (e, j, l, p) {
        var i = {
            ACTIVE: "ac_over"
        };
        var k, f = -1,
            r, m = "",
            s = true,
            c, o;

        function n() {
            if (!s) {
                return
            }
            c = a("<div/>").hide().addClass(e.resultsClass).css("position", "absolute").appendTo(document.body);
            o = a("<ul/>").appendTo(c).mouseover(function (t) {
                if (q(t).nodeName && q(t).nodeName.toUpperCase() == "LI") {
                    f = a("li", o).removeClass(i.ACTIVE).index(q(t));
                    a(q(t)).addClass(i.ACTIVE)
                }
            }).click(function (t) {
                a(q(t)).addClass(i.ACTIVE);
                l();
                j.focus();
                return false
            }).mousedown(function () {
                p.mouseDownOnSelect = true
            }).mouseup(function () {
                p.mouseDownOnSelect = false
            });
            if (e.width > 0) {
                c.css("width", e.width)
            }
            s = false
        }
        function q(u) {
            var t = u.target;
            while (t && t.tagName != "LI") {
                t = t.parentNode
            }
            if (!t) {
                return []
            }
            return t
        }
        function h(t) {
            k.slice(f, f + 1).removeClass(i.ACTIVE);
            g(t);
            var v = k.slice(f, f + 1).addClass(i.ACTIVE);
            if (e.scroll) {
                var u = 0;
                k.slice(0, f).each(function () {
                    u += this.offsetHeight
                });
                if ((u + v[0].offsetHeight - o.scrollTop()) > o[0].clientHeight) {
                    o.scrollTop(u + v[0].offsetHeight - o.innerHeight())
                } else {
                    if (u < o.scrollTop()) {
                        o.scrollTop(u)
                    }
                }
            }
        }
        function g(t) {
            f += t;
            if (f < 0) {
                f = k.size() - 1
            } else {
                if (f >= k.size()) {
                    f = 0
                }
            }
        }
        function b(t) {
            return e.max && e.max < t ? e.max : t
        }
        function d() {
            o.empty();
            var u = b(r.length);
            for (var v = 0; v < u; v++) {
                if (!r[v]) {
                    continue
                }
                var w = e.formatItem(r[v].data, v + 1, u, r[v].value, m);
                if (w === false) {
                    continue
                }
                var t = a("<li/>").html(e.highlight(w, m)).addClass(v % 2 == 0 ? "ac_even" : "ac_odd").appendTo(o)[0];
                a.data(t, "ac_data", r[v])
            }
            k = o.find("li");
            if (e.selectFirst) {
                k.slice(0, 1).addClass(i.ACTIVE);
                f = 0
            }
            if (a.fn.bgiframe) {
                o.bgiframe()
            }
        }
        return {
            display: function (u, t) {
                n();
                r = u;
                m = t;
                d()
            },
            next: function () {
                h(1)
            },
            prev: function () {
                h(-1)
            },
            pageUp: function () {
                if (f != 0 && f - 8 < 0) {
                    h(-f)
                } else {
                    h(-8)
                }
            },
            pageDown: function () {
                if (f != k.size() - 1 && f + 8 > k.size()) {
                    h(k.size() - 1 - f)
                } else {
                    h(8)
                }
            },
            hide: function () {
                c && c.hide();
                k && k.removeClass(i.ACTIVE);
                f = -1
            },
            visible: function () {
                return c && c.is(":visible")
            },
            current: function () {
                return this.visible() && (k.filter("." + i.ACTIVE)[0] || e.selectFirst && k[0])
            },
            show: function () {
                var v = a(j).offset();
                c.css({
                    width: typeof e.width == "string" || e.width > 0 ? e.width : a(j).width(),
                    top: v.top + j.offsetHeight,
                    left: v.left
                }).show();
                if (e.scroll) {
                    o.scrollTop(0);
                    o.css({
                        maxHeight: e.scrollHeight,
                        overflow: "auto"
                    });
                    if (a.browser.msie && typeof document.body.style.maxHeight === "undefined") {
                        var t = 0;
                        k.each(function () {
                            t += this.offsetHeight
                        });
                        var u = t > e.scrollHeight;
                        o.css("height", u ? e.scrollHeight : t);
                        if (!u) {
                            k.width(o.width() - parseInt(k.css("padding-left")) - parseInt(k.css("padding-right")))
                        }
                    }
                }
            },
            selected: function () {
                var t = k && k.filter("." + i.ACTIVE).removeClass(i.ACTIVE);
                return t && t.length && a.data(t[0], "ac_data")
            },
            emptyList: function () {
                o && o.empty()
            },
            unbind: function () {
                c && c.remove()
            }
        }
    };
    a.fn.selection = function (i, b) {
        if (i !== undefined) {
            return this.each(function () {
                if (this.createTextRange) {
                    var j = this.createTextRange();
                    if (b === undefined || i == b) {
                        j.move("character", i);
                        j.select()
                    } else {
                        j.collapse(true);
                        j.moveStart("character", i);
                        j.moveEnd("character", b);
                        j.select()
                    }
                } else {
                    if (this.setSelectionRange) {
                        this.setSelectionRange(i, b)
                    } else {
                        if (this.selectionStart) {
                            this.selectionStart = i;
                            this.selectionEnd = b
                        }
                    }
                }
            })
        }
        var g = this[0];
        if (g.createTextRange) {
            var c = document.selection.createRange(),
                h = g.value,
                f = "<->",
                d = c.text.length;
            c.text = f;
            var e = g.value.indexOf(f);
            g.value = h;
            this.selection(e, e + d);
            return {
                start: e,
                end: e + d
            }
        } else {
            if (g.selectionStart !== undefined) {
                return {
                    start: g.selectionStart,
                    end: g.selectionEnd
                }
            }
        }
    }
})(jQuery);
$(document).ready(function () {
    $("#btn_aut").click(function () {
        $("#nav_aut").fadeOut(300).add($("#zona_aut").animate({
            opacity: 1
        }, 300)).add($("#zona_aut").fadeIn(300));
        return false
    });
    $("#anuleaza_aut").click(function () {
        $("#zona_aut").fadeOut(300).add($("#nav_aut").animate({
            opacity: 1
        }, 300)).add($("#nav_aut").fadeIn(300));
        return false
    });
    $("#address").autocomplete("/str_autocmp.php", {
        selectFirst: false,
        max: 10,
        delay: 0,
        matchContains: true,
        scroll: false
    });
    $().mousemove(function (a) {
        if (show_sel_pct == true) {
            $("#sel_pct").show();
            $("#sel_pct").css({
                left: (a.pageX + 20) + "px",
                top: (a.pageY + 20) + "px"
            })
        }
    });
    $("#accordion").accordion({
        autoHeight: false
    });
    activate_opt(1)
});
var geocoder;
var map;
var marker;
var infowindow;
var show_sel_pct = false;
var punct;
var marker_plecare;
var marker_sosire;
var fullscreen = false;
var markers = [];
var im = 0;
var traseu_activ = false;
var selected = [];
var polyline;
var icon_zoom = false;
var culori = [];
var linkTraseu;

function initialize() {
    $("#textLoading").html("incarcare...");
    $("#ajaxloader").fadeIn("fast");
    incarcaStatii();
    marker_plecare = null;
    marker_sosire = null;
    markers = [];
    im = 0;
    geocoder = new google.maps.Geocoder();
    var b = new google.maps.LatLng(44.4332, 26.0913);
    var a = {
        zoom: 15,
        center: b,
        streetViewControl: false,
        mapTypeControl: false,
        navigationControl: true,
        navigationControlOptions: {
            style: google.maps.NavigationControlStyle.SMALL,
            position: google.maps.ControlPosition.TOP_RIGHT
        },
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById("map_canvas"), a);
    google.maps.event.addListener(map, "click", function (c) {
        select_loc(c.latLng)
    });
    google.maps.event.addListener(map, "zoom_changed", function (d) {
        if (map.getZoom() < 14 && icon_zoom == false) {
            for (var c in markers) {
                switch (markers[c].tip) {
                case "m":
                    var e = new google.maps.MarkerImage("/img/m_metro.png", new google.maps.Size(8, 8), new google.maps.Point(0, 0), new google.maps.Point(4, 4));
                    break;
                case "t":
                    var e = new google.maps.MarkerImage("/img/m_tram.png", new google.maps.Size(8, 8), new google.maps.Point(0, 0), new google.maps.Point(4, 4));
                    break;
                case "a":
                    var e = new google.maps.MarkerImage("/img/m_bus.png", new google.maps.Size(8, 8), new google.maps.Point(0, 0), new google.maps.Point(4, 4));
                    break;
                case "x":
                    var e = new google.maps.MarkerImage("/img/m_mixt.png", new google.maps.Size(8, 8), new google.maps.Point(0, 0), new google.maps.Point(4, 4));
                    break
                }
                markers[c].marker.setIcon(e);
                icon_zoom = true
            }
            var e = new google.maps.MarkerImage("/img/m_selected_g.png", new google.maps.Size(16, 16), new google.maps.Point(0, 0), new google.maps.Point(8, 8));
            for (var c in selected) {
                selected[c].setIcon(e)
            }
        }
        if (map.getZoom() >= 14 && icon_zoom == true) {
            for (var c in markers) {
                switch (markers[c].tip) {
                case "m":
                    var e = new google.maps.MarkerImage("/img/metro.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
                    break;
                case "t":
                    var e = new google.maps.MarkerImage("/img/tram.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
                    break;
                case "a":
                    var e = new google.maps.MarkerImage("/img/bus.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
                    break;
                case "x":
                    var e = new google.maps.MarkerImage("/img/mixt.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
                    break
                }
                markers[c].marker.setIcon(e);
                icon_zoom = false
            }
            var e = new google.maps.MarkerImage("/img/selected_g.png", new google.maps.Size(28, 28), new google.maps.Point(0, 0), new google.maps.Point(14, 14));
            for (var c in selected) {
                selected[c].setIcon(e)
            }
        }
    })
}
function select_loc(a) {
    if (show_sel_pct == true) {
        show_sel_pct = false;
        $("#sel_pct").hide();
        codeLatLng(a);
        if (punct == "plecare") {
            var b = new google.maps.MarkerImage("/img/green_flag.png", new google.maps.Size(32, 32), new google.maps.Point(0, 0), new google.maps.Point(9, 30));
            if (marker_plecare) {
                marker_plecare.setPosition(a);
                marker_plecare.setMap(map)
            } else {
                marker_plecare = new google.maps.Marker({
                    map: map,
                    draggable: true,
                    icon: b,
                    position: a,
                    zIndex: 10000
                });
                google.maps.event.addListener(marker_plecare, "dragend", function () {
                    punct = "plecare";
                    codeLatLng(marker_plecare.getPosition())
                })
            }
        } else {
            var b = new google.maps.MarkerImage("/img/red_flag.png", new google.maps.Size(32, 32), new google.maps.Point(0, 0), new google.maps.Point(9, 30));
            if (marker_sosire) {
                marker_sosire.setPosition(a);
                marker_sosire.setMap(map)
            } else {
                marker_sosire = new google.maps.Marker({
                    map: map,
                    draggable: true,
                    icon: b,
                    position: a,
                    zIndex: 100001
                });
                google.maps.event.addListener(marker_sosire, "dragend", function () {
                    punct = "sosire";
                    codeLatLng(marker_sosire.getPosition())
                })
            }
        }
    }
}
function codeAddress() {
    var a = "Romania, Bucuresti, " + document.getElementById("address").value;
    if (geocoder) {
        geocoder.geocode({
            address: a,
            language: "ro"
        }, function (d, b) {
            if (b == google.maps.GeocoderStatus.OK) {
                map.setCenter(d[0].geometry.location);
                map.setZoom(16);
                if (marker) {
                    marker.setPosition(d[0].geometry.location)
                } else {
                    marker = new google.maps.Marker({
                        map: map,
                        position: d[0].geometry.location
                    })
                }
                var c = d[0].formatted_address;
                if (infowindow) {
                    infowindow.close()
                }
                infowindow = new google.maps.InfoWindow({
                    content: "<strong>Adresa cautata:</strong><br />" + c + '<br /><br /><strong>Optiuni:</strong><br /><a href="javascript:;" onclick="show_sel_pct = true; punct = \'plecare\'; activate_opt(1); select_loc(marker.getPosition()); marker.setMap(null); marker=null; return false;">Seteaza punct plecare</a> | <a href="javascript:;" onclick="show_sel_pct = true; punct = \'sosire\'; activate_opt(1); select_loc(marker.getPosition()); marker.setMap(null); marker=null; return false;">Seteaza punct sosire</a>'
                });
                infowindow.open(map, marker);
                google.maps.event.addListener(marker, "click", function () {
                    if (infowindow) {
                        infowindow.close()
                    }
                    infowindow.open(map, marker)
                })
            } else {
                if (b == google.maps.GeocoderStatus.ZERO_RESULTS) {
                    alert("Cautarea dvs. nu a returnat nici un rezultat!\nIncercati din nou.")
                } else {
                    alert("A intervenit o eroare!\nIncercati din nou.")
                }
            }
        })
    }
}
function codeLatLng(a) {
    if (geocoder) {
        geocoder.geocode({
            latLng: a,
            language: "ro",
        }, function (c, b) {
            if (b == google.maps.GeocoderStatus.OK) {
                if (c[0]) {
                    info_pct = c[0].formatted_address;
                    info_pct = info_pct.substr(0, info_pct.length - 20);
                    if (info_pct == "") {
                        info_pct = roundNumber(a.lat(), 4) + ", " + roundNumber(a.lng(), 4)
                    }
                    if (punct == "plecare") {
                        $("#pctplec").html(info_pct)
                    } else {
                        $("#pctsos").html(info_pct)
                    }
                } else {
                    alert("No results found")
                }
            } else {
                alert("Geocoder failed due to: " + b)
            }
        })
    }
}
function placeMarker(c, a, e, d, g) {
    var f;
    switch (d) {
    case "m":
        f = new google.maps.MarkerImage("/img/metro.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
        break;
    case "a":
        f = new google.maps.MarkerImage("/img/bus.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
        break;
    case "t":
        f = new google.maps.MarkerImage("/img/tram.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
        break;
    case "x":
        f = new google.maps.MarkerImage("/img/mixt.png", new google.maps.Size(18, 18), new google.maps.Point(0, 0), new google.maps.Point(9, 9));
        break
    }
    var b = new google.maps.Marker({
        position: c,
        icon: f,
        title: a,
        map: map,
        zIndex: 1000
    });
    markers[im] = new Object();
    markers[im].marker = b;
    markers[im].tip = d;
    markers[im].id = g;
    markers[im].used = false;
    im++;
    google.maps.event.addListener(b, "click", function () {
        if (show_sel_pct == true) {
            select_loc(b.getPosition())
        } else {
            if (infowindow) {
                infowindow.close()
            }
            infowindow = new google.maps.InfoWindow({
                content: "<br /><strong>Nume statie: </strong>" + a + "<br /><strong>Trasee: </strong>" + e
            });
            infowindow.open(map, b)
        }
    })
}
function incarcaStatii() {
    $.get("/s/", function (data) {
        var data = eval("(" + $.bd(data) + ")");
        for (var i in data) {
            if (i == 0) {} else {
                var location = new google.maps.LatLng(data[i].lat, data[i].lng);
                placeMarker(location, data[i].nume, data[i].trasee, data[i].tip, data[i].id)
            }
        }
        $("#ajaxloader").fadeOut("fast");
        linkTraseu = getUrlVars()["traseu"];
        if (linkTraseu) {
            calculeazaRuta("link")
        }
    })
}
function drawPoly(d) {
    var a = [];
    var c = 0;
    polyline = [];
    var e = 0;
    for (var b in d) {
        if (culori[b] && b != 0) {
            a[c] = d[b];
            polyline[e] = new google.maps.Polyline({
                path: a,
                strokeColor: culori[b],
                strokeOpacity: 0.9,
                strokeWeight: 4
            });
            polyline[e].setMap(map);
            e++;
            a = [];
            a[0] = d[b];
            c = 1
        } else {
            a[c] = d[b];
            c++
        }
    }
}
function getUrlVars() {
    var b = {};
    var a = window.location.href.replace(/[#&]+([^=&]+)=([^&]*)/gi, function (c, d, e) {
        b[d] = e
    });
    return b
}
function stergeRuta(a) {
    var c = [];
    for (var b in polyline) {
        polyline[b].setMap(null)
    }
    polyline = [];
    for (var b in selected) {
        selected[b].setMap(null)
    }
    $("#st_met").attr("checked", "checked");
    $("#st_tram").attr("checked", "checked");
    $("#st_aut").attr("checked", "checked");
    for (var b in markers) {
        markers[b].used = false;
        markers[b].marker.setMap(map)
    }
    selected = [];
    $("#pctplec").html("neselectat");
    $("#pctsos").html("neselectat");
    $("#cu_met").attr("checked", "checked");
    $("#cu_tram").attr("checked", "checked");
    $("#cu_aut").attr("checked", "checked");
    $("#rezRut").html("");
    marker_plecare.setMap(null);
    marker_sosire.setMap(null);
    marker_plecare = null;
    marker_sosire = null
}
var raspuns;

function calculeazaRuta(h) {
    if ((marker_plecare && marker_sosire) || (h == "link")) {
        $("#textLoading").html("calculare ruta; va rugam asteptati...");
        $("#ajaxloader").fadeIn("fast");
        if (h == "link") {
            var e = {
                traseu: linkTraseu
            }
        } else {
            var b = marker_plecare.getPosition().lat();
            var c = marker_plecare.getPosition().lng();
            var f = marker_sosire.getPosition().lat();
            var g = marker_sosire.getPosition().lng();
            var i;
            var d;
            var a;
            i = $("#cu_met").attr("checked");
            d = $("#cu_tram").attr("checked");
            a = $("#cu_aut").attr("checked");
            pr = $("#pref_rapid").attr("checked");
            var e = {
                plat: b,
                plng: c,
                slat: f,
                slng: g,
                cm: i,
                ct: d,
                ca: a,
                com: complexity,
                pref: pr
            }
        }
        $.post("/c/", e, function (l) {
            raspuns = l;
            if (raspuns.status == "err") {
                printeazaRuta(0)
            } else {
                var k = "<br />";
                for (var j = 0; j < raspuns.nrt; j++) {
                    k += '<br /><div class="tr_head tr_closed" id="tr_head' + j + '"><div class="tr_wrap"><a class="traseu_titlu" href="#" onclick="printeazaRuta(' + j + '); return false;">Traseu ' + (j + 1) + "</a><br /><em>" + raspuns.trasee[j].info + '</em></div></div><div class="indicatii" id="indicatii' + j + '">' + raspuns.trasee[j].indicatii + "</div>"
                }
                $("#rezRut").html(k + "<br /><br />Solutie generata in: " + raspuns.timp + " sec.");
                $("#indicatii0").show();
                printeazaRuta(0)
            }
        }, "json")
    } else {
        alert("Setati punctele de plecare / sosire");
        return
    }
}
function printeazaRuta(c) {
    $(".indicatii").hide();
    $("#indicatii" + c).show();
    $(".tr_head").removeClass("tr_open");
    $(".tr_head").addClass("tr_closed");
    $("#tr_head" + c).addClass("tr_open");
    var g = [];
    for (var e in polyline) {
        polyline[e].setMap(null)
    }
    polyline = [];
    for (var e in selected) {
        selected[e].setMap(null)
    }
    $("#st_met").removeAttr("checked");
    $("#st_tram").removeAttr("checked");
    $("#st_aut").removeAttr("checked");
    var d = getUrlVars()["debug"];
    if (d != "on") {
        for (var e in markers) {
            markers[e].used = false;
            markers[e].marker.setMap(null)
        }
    }
    selected = [];
    var f = 0;
    linkTraseu = "";
    if (raspuns.status == "err") {
        $("#rezRut").html("<br /><br /><b>" + raspuns.mesaj + "</b>");
        for (var e in markers) {
            markers[e].used = false;
            markers[e].marker.setMap(map)
        }
    } else {
        if (map.getZoom() >= 14) {
            var h = new google.maps.MarkerImage("/img/selected_g.png", new google.maps.Size(28, 28), new google.maps.Point(0, 0), new google.maps.Point(14, 14))
        } else {
            var h = new google.maps.MarkerImage("/img/m_selected_g.png", new google.maps.Size(16, 16), new google.maps.Point(0, 0), new google.maps.Point(8, 8))
        }
        for (var e in raspuns.trasee[c].traseu) {
            var b = new google.maps.LatLng(raspuns.trasee[c].traseu[e].lat, raspuns.trasee[c].traseu[e].lng);
            var a = new google.maps.Marker({
                map: map,
                icon: h,
                position: b,
                zIndex: 10
            });
            selected[f] = a;
            markUsed(raspuns.trasee[c].traseu[e].id);
            g[f] = b;
            f++;
            if (linkTraseu == "") {
                linkTraseu = raspuns.trasee[c].traseu[e].id
            } else {
                linkTraseu += "," + raspuns.trasee[c].traseu[e].id
            }
        }
        culori = raspuns.trasee[c].culori;
        drawPoly(g);
        zoomAll();
        buildLink();
        setFlags("plecare", g[0]);
        setTimeout(function () {
            setFlags("sosire", g[f - 1])
        }, 500)
    }
    $("#ajaxloader").fadeOut("fast")
}
function setFlags(a, b) {
    if (!marker_plecare || !marker_sosire) {
        show_sel_pct = true;
        punct = a;
        select_loc(b)
    }
}
function buildLink() {
    var a = window.location.href;
    var b = a.split("#");
    var c = b[0] + "#traseu=" + $.be(linkTraseu);
    window.location.href = c
}
function roundNumber(b, c) {
    var a = Math.round(b * Math.pow(10, c)) / Math.pow(10, c);
    return a
}
function activate_opt(a) {
    $("#accordion").accordion("activate", a)
}
function markUsed(b) {
    for (var a in markers) {
        if (markers[a].id == b) {
            markers[a].used = true;
            markers[a].marker.setMap(map)
        }
    }
}
var show_x = true;

function check_x() {
    var b = $("#st_tram").attr("checked");
    var a = $("#st_aut").attr("checked");
    if (!b && !a && show_x) {
        ascundeElem("x");
        show_x = false
    } else {
        if (((!b && a) || (b && !a)) && !show_x) {
            ascundeElem("x");
            show_x = true
        }
    }
}
function ascundeElem(b) {
    if (!traseu_activ) {
        for (var a in markers) {
            if (markers[a].tip == b && markers[a].used == false) {
                if (markers[a].marker.getMap() == null) {
                    markers[a].marker.setMap(map)
                } else {
                    markers[a].marker.setMap(null)
                }
            }
        }
    }
}
function showFullscreen() {
    if (!fullscreen) {
        fullscreen = true;
        $("#map_wrapper").css({
            position: "fixed",
            top: "0",
            left: "0",
            width: "100%",
            height: "100%",
            border: "0",
            "margin-left": "0"
        });
        $("#map_canvas").css({
            width: "100%",
            position: "fixed",
            top: "0",
            left: "0",
            "z-index": "3"
        });
        $("#logo_fullscreen").show();
        $(".skyscraper").hide();
        google.maps.event.trigger(map, "resize")
    } else {
        fullscreen = false;
        $("#map_wrapper").css({
            position: "relative",
            top: "auto",
            left: "auto",
            width: "auto",
            height: "500px",
            border: "1px solid #999999",
            "margin-left": "130px"
        });
        $("#map_canvas").css({
            width: "auto",
            position: "inherit"
        });
        $("#logo_fullscreen").hide();
        $(".skyscraper").show();
        google.maps.event.trigger(map, "resize")
    }
}
function switch_cautare(a) {
    $(".tab_cautare").removeClass("tab_sel");
    $("#address").val("");
    $("#address").setOptions({
        minChars: a
    })
}
function getFlashMovie(b) {
    var a = navigator.appName.indexOf("Microsoft") != -1;
    return (a) ? window[b] : document[b]
}
var complexity = 3;

function setComplexity(a) {
    complexity = a
}
function zoomAll() {
    var b = new google.maps.LatLngBounds();
    for (var a in markers) {
        if (markers[a].used == true) {
            b.extend(markers[a].marker.getPosition())
        }
    }
    if (!b.isEmpty()) {
        map.fitBounds(b)
    }
}(function (c) {
    var b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var d = function (f) {
        f = f.replace(/\x0d\x0a/g, "\x0a");
        var e = "";
        for (var h = 0; h < f.length; h++) {
            var g = f.charCodeAt(h);
            if (g < 128) {
                e += String.fromCharCode(g)
            } else {
                if ((g > 127) && (g < 2048)) {
                    e += String.fromCharCode((g >> 6) | 192);
                    e += String.fromCharCode((g & 63) | 128)
                } else {
                    e += String.fromCharCode((g >> 12) | 224);
                    e += String.fromCharCode(((g >> 6) & 63) | 128);
                    e += String.fromCharCode((g & 63) | 128)
                }
            }
        }
        return e
    };
    var a = function (e) {
        var f = "";
        var g = 0;
        var h = c1 = c2 = 0;
        while (g < e.length) {
            h = e.charCodeAt(g);
            if (h < 128) {
                f += String.fromCharCode(h);
                g++
            } else {
                if ((h > 191) && (h < 224)) {
                    c2 = e.charCodeAt(g + 1);
                    f += String.fromCharCode(((h & 31) << 6) | (c2 & 63));
                    g += 2
                } else {
                    c2 = e.charCodeAt(g + 1);
                    c3 = e.charCodeAt(g + 2);
                    f += String.fromCharCode(((h & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                    g += 3
                }
            }
        }
        return f
    };
    c.extend({
        be: function (g) {
            var e = "";
            var o, m, k, n, l, j, h;
            var f = 0;
            g = d(g);
            while (f < g.length) {
                o = g.charCodeAt(f++);
                m = g.charCodeAt(f++);
                k = g.charCodeAt(f++);
                n = o >> 2;
                l = ((o & 3) << 4) | (m >> 4);
                j = ((m & 15) << 2) | (k >> 6);
                h = k & 63;
                if (isNaN(m)) {
                    j = h = 64
                } else {
                    if (isNaN(k)) {
                        h = 64
                    }
                }
                e = e + b.charAt(n) + b.charAt(l) + b.charAt(j) + b.charAt(h)
            }
            return e
        },
        bd: function (g) {
            var e = "";
            var o, m, k;
            var n, l, j, h;
            var f = 0;
            g = g.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (f < g.length) {
                n = b.indexOf(g.charAt(f++));
                l = b.indexOf(g.charAt(f++));
                j = b.indexOf(g.charAt(f++));
                h = b.indexOf(g.charAt(f++));
                o = (n << 2) | (l >> 4);
                m = ((l & 15) << 4) | (j >> 2);
                k = ((j & 3) << 6) | h;
                e = e + String.fromCharCode(o);
                if (j != 64) {
                    e = e + String.fromCharCode(m)
                }
                if (h != 64) {
                    e = e + String.fromCharCode(k)
                }
            }
            e = a(e);
            return e
        }
    })
})(jQuery);
jQuery.ui || (function (c) {
    var i = c.fn.remove,
        d = c.browser.mozilla && (parseFloat(c.browser.version) < 1.9);
    c.ui = {
        version: "1.7.2",
        plugin: {
            add: function (k, l, n) {
                var m = c.ui[k].prototype;
                for (var j in n) {
                    m.plugins[j] = m.plugins[j] || [];
                    m.plugins[j].push([l, n[j]])
                }
            },
            call: function (j, l, k) {
                var n = j.plugins[l];
                if (!n || !j.element[0].parentNode) {
                    return
                }
                for (var m = 0; m < n.length; m++) {
                    if (j.options[n[m][0]]) {
                        n[m][1].apply(j.element, k)
                    }
                }
            }
        },
        contains: function (k, j) {
            return document.compareDocumentPosition ? k.compareDocumentPosition(j) & 16 : k !== j && k.contains(j)
        },
        hasScroll: function (m, k) {
            if (c(m).css("overflow") == "hidden") {
                return false
            }
            var j = (k && k == "left") ? "scrollLeft" : "scrollTop",
                l = false;
            if (m[j] > 0) {
                return true
            }
            m[j] = 1;
            l = (m[j] > 0);
            m[j] = 0;
            return l
        },
        isOverAxis: function (k, j, l) {
            return (k > j) && (k < (j + l))
        },
        isOver: function (o, k, n, m, j, l) {
            return c.ui.isOverAxis(o, n, j) && c.ui.isOverAxis(k, m, l)
        },
        keyCode: {
            BACKSPACE: 8,
            CAPS_LOCK: 20,
            COMMA: 188,
            CONTROL: 17,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            INSERT: 45,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SHIFT: 16,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    };
    if (d) {
        var f = c.attr,
            e = c.fn.removeAttr,
            h = "http://www.w3.org/2005/07/aaa",
            a = /^aria-/,
            b = /^wairole:/;
        c.attr = function (k, j, l) {
            var m = l !== undefined;
            return (j == "role" ? (m ? f.call(this, k, j, "wairole:" + l) : (f.apply(this, arguments) || "").replace(b, "")) : (a.test(j) ? (m ? k.setAttributeNS(h, j.replace(a, "aaa:"), l) : f.call(this, k, j.replace(a, "aaa:"))) : f.apply(this, arguments)))
        };
        c.fn.removeAttr = function (j) {
            return (a.test(j) ? this.each(function () {
                this.removeAttributeNS(h, j.replace(a, ""))
            }) : e.call(this, j))
        }
    }
    c.fn.extend({
        remove: function () {
            c("*", this).add(this).each(function () {
                c(this).triggerHandler("remove")
            });
            return i.apply(this, arguments)
        },
        enableSelection: function () {
            return this.attr("unselectable", "off").css("MozUserSelect", "").unbind("selectstart.ui")
        },
        disableSelection: function () {
            return this.attr("unselectable", "on").css("MozUserSelect", "none").bind("selectstart.ui", function () {
                return false
            })
        },
        scrollParent: function () {
            var j;
            if ((c.browser.msie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
                j = this.parents().filter(function () {
                    return (/(relative|absolute|fixed)/).test(c.curCSS(this, "position", 1)) && (/(auto|scroll)/).test(c.curCSS(this, "overflow", 1) + c.curCSS(this, "overflow-y", 1) + c.curCSS(this, "overflow-x", 1))
                }).eq(0)
            } else {
                j = this.parents().filter(function () {
                    return (/(auto|scroll)/).test(c.curCSS(this, "overflow", 1) + c.curCSS(this, "overflow-y", 1) + c.curCSS(this, "overflow-x", 1))
                }).eq(0)
            }
            return (/fixed/).test(this.css("position")) || !j.length ? c(document) : j
        }
    });
    c.extend(c.expr[":"], {
        data: function (l, k, j) {
            return !!c.data(l, j[3])
        },
        focusable: function (k) {
            var l = k.nodeName.toLowerCase(),
                j = c.attr(k, "tabindex");
            return (/input|select|textarea|button|object/.test(l) ? !k.disabled : "a" == l || "area" == l ? k.href || !isNaN(j) : !isNaN(j)) && !c(k)["area" == l ? "parents" : "closest"](":hidden").length
        },
        tabbable: function (k) {
            var j = c.attr(k, "tabindex");
            return (isNaN(j) || j >= 0) && c(k).is(":focusable")
        }
    });

    function g(m, n, o, l) {
        function k(q) {
            var p = c[m][n][q] || [];
            return (typeof p == "string" ? p.split(/,?\s+/) : p)
        }
        var j = k("getter");
        if (l.length == 1 && typeof l[0] == "string") {
            j = j.concat(k("getterSetter"))
        }
        return (c.inArray(o, j) != -1)
    }
    c.widget = function (k, j) {
        var l = k.split(".")[0];
        k = k.split(".")[1];
        c.fn[k] = function (p) {
            var n = (typeof p == "string"),
                o = Array.prototype.slice.call(arguments, 1);
            if (n && p.substring(0, 1) == "_") {
                return this
            }
            if (n && g(l, k, p, o)) {
                var m = c.data(this[0], k);
                return (m ? m[p].apply(m, o) : undefined)
            }
            return this.each(function () {
                var q = c.data(this, k);
                (!q && !n && c.data(this, k, new c[l][k](this, p))._init());
                (q && n && c.isFunction(q[p]) && q[p].apply(q, o))
            })
        };
        c[l] = c[l] || {};
        c[l][k] = function (o, n) {
            var m = this;
            this.namespace = l;
            this.widgetName = k;
            this.widgetEventPrefix = c[l][k].eventPrefix || k;
            this.widgetBaseClass = l + "-" + k;
            this.options = c.extend({}, c.widget.defaults, c[l][k].defaults, c.metadata && c.metadata.get(o)[k], n);
            this.element = c(o).bind("setData." + k, function (q, p, r) {
                if (q.target == o) {
                    return m._setData(p, r)
                }
            }).bind("getData." + k, function (q, p) {
                if (q.target == o) {
                    return m._getData(p)
                }
            }).bind("remove", function () {
                return m.destroy()
            })
        };
        c[l][k].prototype = c.extend({}, c.widget.prototype, j);
        c[l][k].getterSetter = "option"
    };
    c.widget.prototype = {
        _init: function () {},
        destroy: function () {
            this.element.removeData(this.widgetName).removeClass(this.widgetBaseClass + "-disabled " + this.namespace + "-state-disabled").removeAttr("aria-disabled")
        },
        option: function (l, m) {
            var k = l,
                j = this;
            if (typeof l == "string") {
                if (m === undefined) {
                    return this._getData(l)
                }
                k = {};
                k[l] = m
            }
            c.each(k, function (n, o) {
                j._setData(n, o)
            })
        },
        _getData: function (j) {
            return this.options[j]
        },
        _setData: function (j, k) {
            this.options[j] = k;
            if (j == "disabled") {
                this.element[k ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled " + this.namespace + "-state-disabled").attr("aria-disabled", k)
            }
        },
        enable: function () {
            this._setData("disabled", false)
        },
        disable: function () {
            this._setData("disabled", true)
        },
        _trigger: function (l, m, n) {
            var p = this.options[l],
                j = (l == this.widgetEventPrefix ? l : this.widgetEventPrefix + l);
            m = c.Event(m);
            m.type = j;
            if (m.originalEvent) {
                for (var k = c.event.props.length, o; k;) {
                    o = c.event.props[--k];
                    m[o] = m.originalEvent[o]
                }
            }
            this.element.trigger(m, n);
            return !(c.isFunction(p) && p.call(this.element[0], m, n) === false || m.isDefaultPrevented())
        }
    };
    c.widget.defaults = {
        disabled: false
    };
    c.ui.mouse = {
        _mouseInit: function () {
            var j = this;
            this.element.bind("mousedown." + this.widgetName, function (k) {
                return j._mouseDown(k)
            }).bind("click." + this.widgetName, function (k) {
                if (j._preventClickEvent) {
                    j._preventClickEvent = false;
                    k.stopImmediatePropagation();
                    return false
                }
            });
            if (c.browser.msie) {
                this._mouseUnselectable = this.element.attr("unselectable");
                this.element.attr("unselectable", "on")
            }
            this.started = false
        },
        _mouseDestroy: function () {
            this.element.unbind("." + this.widgetName);
            (c.browser.msie && this.element.attr("unselectable", this._mouseUnselectable))
        },
        _mouseDown: function (l) {
            l.originalEvent = l.originalEvent || {};
            if (l.originalEvent.mouseHandled) {
                return
            }(this._mouseStarted && this._mouseUp(l));
            this._mouseDownEvent = l;
            var k = this,
                m = (l.which == 1),
                j = (typeof this.options.cancel == "string" ? c(l.target).parents().add(l.target).filter(this.options.cancel).length : false);
            if (!m || j || !this._mouseCapture(l)) {
                return true
            }
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function () {
                    k.mouseDelayMet = true
                }, this.options.delay)
            }
            if (this._mouseDistanceMet(l) && this._mouseDelayMet(l)) {
                this._mouseStarted = (this._mouseStart(l) !== false);
                if (!this._mouseStarted) {
                    l.preventDefault();
                    return true
                }
            }
            this._mouseMoveDelegate = function (n) {
                return k._mouseMove(n)
            };
            this._mouseUpDelegate = function (n) {
                return k._mouseUp(n)
            };
            c(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            (c.browser.safari || l.preventDefault());
            l.originalEvent.mouseHandled = true;
            return true
        },
        _mouseMove: function (j) {
            if (c.browser.msie && !j.button) {
                return this._mouseUp(j)
            }
            if (this._mouseStarted) {
                this._mouseDrag(j);
                return j.preventDefault()
            }
            if (this._mouseDistanceMet(j) && this._mouseDelayMet(j)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, j) !== false);
                (this._mouseStarted ? this._mouseDrag(j) : this._mouseUp(j))
            }
            return !this._mouseStarted
        },
        _mouseUp: function (j) {
            c(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                this._preventClickEvent = (j.target == this._mouseDownEvent.target);
                this._mouseStop(j)
            }
            return false
        },
        _mouseDistanceMet: function (j) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - j.pageX), Math.abs(this._mouseDownEvent.pageY - j.pageY)) >= this.options.distance)
        },
        _mouseDelayMet: function (j) {
            return this.mouseDelayMet
        },
        _mouseStart: function (j) {},
        _mouseDrag: function (j) {},
        _mouseStop: function (j) {},
        _mouseCapture: function (j) {
            return true
        }
    };
    c.ui.mouse.defaults = {
        cancel: null,
        distance: 1,
        delay: 0
    }
})(jQuery);
(function (a) {
    a.widget("ui.accordion", {
        _init: function () {
            var d = this.options,
                b = this;
            this.running = 0;
            if (d.collapsible == a.ui.accordion.defaults.collapsible && d.alwaysOpen != a.ui.accordion.defaults.alwaysOpen) {
                d.collapsible = !d.alwaysOpen
            }
            if (d.navigation) {
                var c = this.element.find("a").filter(d.navigationFilter);
                if (c.length) {
                    if (c.filter(d.header).length) {
                        this.active = c
                    } else {
                        this.active = c.parent().parent().prev();
                        c.addClass("ui-accordion-content-active")
                    }
                }
            }
            this.element.addClass("ui-accordion ui-widget ui-helper-reset");
            if (this.element[0].nodeName == "UL") {
                this.element.children("li").addClass("ui-accordion-li-fix")
            }
            this.headers = this.element.find(d.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () {
                a(this).addClass("ui-state-hover")
            }).bind("mouseleave.accordion", function () {
                a(this).removeClass("ui-state-hover")
            }).bind("focus.accordion", function () {
                a(this).addClass("ui-state-focus")
            }).bind("blur.accordion", function () {
                a(this).removeClass("ui-state-focus")
            });
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
            this.active = this._findActive(this.active || d.active).toggleClass("ui-state-default").toggleClass("ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");
            this.active.next().addClass("ui-accordion-content-active");
            a("<span/>").addClass("ui-icon " + d.icons.header).prependTo(this.headers);
            this.active.find(".ui-icon").toggleClass(d.icons.header).toggleClass(d.icons.headerSelected);
            if (a.browser.msie) {
                this.element.find("a").css("zoom", "1")
            }
            this.resize();
            this.element.attr("role", "tablist");
            this.headers.attr("role", "tab").bind("keydown", function (e) {
                return b._keydown(e)
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active || "").attr("aria-expanded", "false").attr("tabIndex", "-1").next().hide();
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", "0")
            } else {
                this.active.attr("aria-expanded", "true").attr("tabIndex", "0")
            }
            if (!a.browser.safari) {
                this.headers.find("a").attr("tabIndex", "-1")
            }
            if (d.event) {
                this.headers.bind((d.event) + ".accordion", function (e) {
                    return b._clickHandler.call(b, e, this)
                })
            }
        },
        destroy: function () {
            var c = this.options;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role").unbind(".accordion").removeData("accordion");
            this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("tabindex");
            this.headers.find("a").removeAttr("tabindex");
            this.headers.children(".ui-icon").remove();
            var b = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active");
            if (c.autoHeight || c.fillHeight) {
                b.css("height", "")
            }
        },
        _setData: function (b, c) {
            if (b == "alwaysOpen") {
                b = "collapsible";
                c = !c
            }
            a.widget.prototype._setData.apply(this, arguments)
        },
        _keydown: function (e) {
            var g = this.options,
                f = a.ui.keyCode;
            if (g.disabled || e.altKey || e.ctrlKey) {
                return
            }
            var d = this.headers.length;
            var b = this.headers.index(e.target);
            var c = false;
            switch (e.keyCode) {
            case f.RIGHT:
            case f.DOWN:
                c = this.headers[(b + 1) % d];
                break;
            case f.LEFT:
            case f.UP:
                c = this.headers[(b - 1 + d) % d];
                break;
            case f.SPACE:
            case f.ENTER:
                return this._clickHandler({
                    target: e.target
                }, e.target)
            }
            if (c) {
                a(e.target).attr("tabIndex", "-1");
                a(c).attr("tabIndex", "0");
                c.focus();
                return false
            }
            return true
        },
        resize: function () {
            var e = this.options,
                d;
            if (e.fillSpace) {
                if (a.browser.msie) {
                    var b = this.element.parent().css("overflow");
                    this.element.parent().css("overflow", "hidden")
                }
                d = this.element.parent().height();
                if (a.browser.msie) {
                    this.element.parent().css("overflow", b)
                }
                this.headers.each(function () {
                    d -= a(this).outerHeight()
                });
                var c = 0;
                this.headers.next().each(function () {
                    c = Math.max(c, a(this).innerHeight() - a(this).height())
                }).height(Math.max(0, d - c)).css("overflow", "auto")
            } else {
                if (e.autoHeight) {
                    d = 0;
                    this.headers.next().each(function () {
                        d = Math.max(d, a(this).outerHeight())
                    }).height(d)
                }
            }
        },
        activate: function (b) {
            var c = this._findActive(b)[0];
            this._clickHandler({
                target: c
            }, c)
        },
        _findActive: function (b) {
            return b ? typeof b == "number" ? this.headers.filter(":eq(" + b + ")") : this.headers.not(this.headers.not(b)) : b === false ? a([]) : this.headers.filter(":eq(0)")
        },
        _clickHandler: function (b, f) {
            var d = this.options;
            if (d.disabled) {
                return false
            }
            if (!b.target && d.collapsible) {
                this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").find(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);
                this.active.next().addClass("ui-accordion-content-active");
                var h = this.active.next(),
                    e = {
                        options: d,
                        newHeader: a([]),
                        oldHeader: d.active,
                        newContent: a([]),
                        oldContent: h
                    },
                    c = (this.active = a([]));
                this._toggle(c, h, e);
                return false
            }
            var g = a(b.currentTarget || f);
            var i = g[0] == this.active[0];
            if (this.running || (!d.collapsible && i)) {
                return false
            }
            this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").find(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);
            this.active.next().addClass("ui-accordion-content-active");
            if (!i) {
                g.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").find(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected);
                g.next().addClass("ui-accordion-content-active")
            }
            var c = g.next(),
                h = this.active.next(),
                e = {
                    options: d,
                    newHeader: i && d.collapsible ? a([]) : g,
                    oldHeader: this.active,
                    newContent: i && d.collapsible ? a([]) : c.find("> *"),
                    oldContent: h.find("> *")
                },
                j = this.headers.index(this.active[0]) > this.headers.index(g[0]);
            this.active = i ? a([]) : g;
            this._toggle(c, h, e, i, j);
            return false
        },
        _toggle: function (b, i, g, j, k) {
            var d = this.options,
                m = this;
            this.toShow = b;
            this.toHide = i;
            this.data = g;
            var c = function () {
                if (!m) {
                    return
                }
                return m._completed.apply(m, arguments)
            };
            this._trigger("changestart", null, this.data);
            this.running = i.size() === 0 ? b.size() : i.size();
            if (d.animated) {
                var f = {};
                if (d.collapsible && j) {
                    f = {
                        toShow: a([]),
                        toHide: i,
                        complete: c,
                        down: k,
                        autoHeight: d.autoHeight || d.fillSpace
                    }
                } else {
                    f = {
                        toShow: b,
                        toHide: i,
                        complete: c,
                        down: k,
                        autoHeight: d.autoHeight || d.fillSpace
                    }
                }
                if (!d.proxied) {
                    d.proxied = d.animated
                }
                if (!d.proxiedDuration) {
                    d.proxiedDuration = d.duration
                }
                d.animated = a.isFunction(d.proxied) ? d.proxied(f) : d.proxied;
                d.duration = a.isFunction(d.proxiedDuration) ? d.proxiedDuration(f) : d.proxiedDuration;
                var l = a.ui.accordion.animations,
                    e = d.duration,
                    h = d.animated;
                if (!l[h]) {
                    l[h] = function (n) {
                        this.slide(n, {
                            easing: h,
                            duration: e || 700
                        })
                    }
                }
                l[h](f)
            } else {
                if (d.collapsible && j) {
                    b.toggle()
                } else {
                    i.hide();
                    b.show()
                }
                c(true)
            }
            i.prev().attr("aria-expanded", "false").attr("tabIndex", "-1").blur();
            b.prev().attr("aria-expanded", "true").attr("tabIndex", "0").focus()
        },
        _completed: function (b) {
            var c = this.options;
            this.running = b ? 0 : --this.running;
            if (this.running) {
                return
            }
            if (c.clearStyle) {
                this.toShow.add(this.toHide).css({
                    height: "",
                    overflow: ""
                })
            }
            this._trigger("change", null, this.data)
        }
    });
    a.extend(a.ui.accordion, {
        version: "1.7.2",
        defaults: {
            active: null,
            alwaysOpen: true,
            animated: "slide",
            autoHeight: true,
            clearStyle: false,
            collapsible: false,
            event: "click",
            fillSpace: false,
            header: "> li > :first-child,> :not(li):even",
            icons: {
                header: "ui-icon-triangle-1-e",
                headerSelected: "ui-icon-triangle-1-s"
            },
            navigation: false,
            navigationFilter: function () {
                return this.href.toLowerCase() == location.href.toLowerCase()
            }
        },
        animations: {
            slide: function (j, h) {
                j = a.extend({
                    easing: "swing",
                    duration: 300
                }, j, h);
                if (!j.toHide.size()) {
                    j.toShow.animate({
                        height: "show"
                    }, j);
                    return
                }
                if (!j.toShow.size()) {
                    j.toHide.animate({
                        height: "hide"
                    }, j);
                    return
                }
                var c = j.toShow.css("overflow"),
                    g, d = {},
                    f = {},
                    e = ["height", "paddingTop", "paddingBottom"],
                    b;
                var i = j.toShow;
                b = i[0].style.width;
                i.width(parseInt(i.parent().width(), 10) - parseInt(i.css("paddingLeft"), 10) - parseInt(i.css("paddingRight"), 10) - (parseInt(i.css("borderLeftWidth"), 10) || 0) - (parseInt(i.css("borderRightWidth"), 10) || 0));
                a.each(e, function (k, m) {
                    f[m] = "hide";
                    var l = ("" + a.css(j.toShow[0], m)).match(/^([\d+-.]+)(.*)$/);
                    d[m] = {
                        value: l[1],
                        unit: l[2] || "px"
                    }
                });
                j.toShow.css({
                    height: 0,
                    overflow: "hidden"
                }).show();
                j.toHide.filter(":hidden").each(j.complete).end().filter(":visible").animate(f, {
                    step: function (k, l) {
                        if (l.prop == "height") {
                            g = (l.now - l.start) / (l.end - l.start)
                        }
                        j.toShow[0].style[l.prop] = (g * d[l.prop].value) + d[l.prop].unit
                    },
                    duration: j.duration,
                    easing: j.easing,
                    complete: function () {
                        if (!j.autoHeight) {
                            j.toShow.css("height", "")
                        }
                        j.toShow.css("width", b);
                        j.toShow.css({
                            overflow: c
                        });
                        j.complete()
                    }
                })
            },
            bounceslide: function (b) {
                this.slide(b, {
                    easing: b.down ? "easeOutBounce" : "swing",
                    duration: b.down ? 1000 : 200
                })
            },
            easeslide: function (b) {
                this.slide(b, {
                    easing: "easeinout",
                    duration: 700
                })
            }
        }
    })
})(jQuery);